{
	"name": "blitzmax",
	"version": "2.15.1",
	"publisher": "Hezkore",
	"displayName": "BlitzMax",
	"description": "BlitzMax for Visual Studio Code.",
	"author": {
		"name": "Hezkore",
		"email": "Hezkore@GMail.com"
	},
	"license": "MIT",
	"keywords": [
		"BlitzMax",
		"BlitzMax NG",
		"bmx",
		"multi-root ready"
	],
	"icon": "media/icon.png",
	"categories": [
		"Programming Languages",
		"Formatters",
		"Debuggers",
		"Snippets",
		"Linters",
		"Other"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/Hezkore/vscode-blitzmax-support"
	},
	"bugs": {
		"url": "https://github.com/Hezkore/vscode-blitzmax-support/issues"
	},
	"scripts": {
		"vscode:prepublish": "webpack --mode production",
		"webpack": "webpack --mode development",
		"webpack-dev": "webpack --mode development --watch",
		"compile": "tsc -p ./src",
		"lint": "eslint src --ext ts",
		"watch": "tsc -watch -p ./src",
		"package": "vsce package",
		"publish": "vsce publish"
	},
	"engines": {
		"vscode": "^1.57.0"
	},
	"dependencies": {
		"await-notify": "1.0.1",
		"vscode-debugadapter": "^1.47.0",
		"vscode-languageclient": "7.0.0"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.2.2",
		"@types/node": "^15.0.2",
		"@types/vscode": "^1.57.0",
		"@typescript-eslint/eslint-plugin": "^4.22.1",
		"@typescript-eslint/parser": "4.22.1",
		"eslint": "7.26.0",
		"glob": "^7.1.7",
		"mocha": "^8.4.0",
		"ts-loader": "9.1.2",
		"typescript": "^4.2.4",
		"vsce": "1.88.0",
		"vscode-debugadapter-testsupport": "^1.47.0",
		"vscode-test": "1.5.2",
		"webpack": "5.36.2",
		"webpack-cli": "4.7.0"
	},
	"main": "./out/extension",
	"activationEvents": [
		"workspaceContains:/.bmx",
		"onLanguage:blitzmax",
		"onDebugResolve:bmx",
		"onDebugDynamicConfigurations:bmx",
		"onView:blitzmax-documentation",
		"onCommand:blitzmax.rebuildDoc",
		"onCommand:blitzmax.buildModules",
		"onCommand:blitzmax.rebuildAllModules",
		"onCommand:blitzmax.version",
		"onCommand:blitzmax.quickHelp",
		"onCommand:blitzmax.resetBuildOptions",
		"onCommand:blitzmax.changeDefaultBuildTask",
		"onCommand:blitzmax.toggleBuildOption",
		"onCommand:blitzmax.pickBlitzMaxPath",
		"onCommand:blitzmax.setSourceFile",
		"onCommand:blitzmax.build",
		"onCommand:blitzmax.buildAndRun",
		"onCommand:blitzmax.buildAndDebug",
		"onCommand:blitzmax.homepage",
		"onCommand:blitzmax.settings"
	],
	"contributes": {
		"walkthroughs": [
			{
				"id": "config bmx",
				"title": "Configuring BlitzMax",
				"description": "Get started with BlitzMax.",
				"steps": [
					{
						"id": "install mac",
						"title": "Installing BlitzMax for MacOS",
						"description": "Visit blitzmax.org to download BlitzMax NG.\n[Download BlitzMax NG](command:blitzmax.homepage)",
						"when": "isMac",
						"media": {
							"markdown": "walkthroughs/install_macos.md"
						},
						"completionEvents": [
							"onCommand:blitzmax.homepage"
						]
					},
					{
						"id": "install windows",
						"title": "Installing BlitzMax for Windows",
						"description": "Visit blitzmax.org to download BlitzMax NG.\n[Download BlitzMax NG](command:blitzmax.homepage)",
						"when": "isWindows",
						"media": {
							"markdown": "walkthroughs/install_windows.md"
						},
						"completionEvents": [
							"onCommand:blitzmax.homepage"
						]
					},
					{
						"id": "install linux",
						"title": "Installing BlitzMax for Linux",
						"description": "Visit blitzmax.org to download BlitzMax NG.\n[Download BlitzMax NG](command:blitzmax.homepage)",
						"when": "isLinux",
						"media": {
							"markdown": "walkthroughs/install_linux.md"
						},
						"completionEvents": [
							"onCommand:blitzmax.homepage"
						]
					},
					{
						"id": "set path",
						"title": "Selecting Your BlitzMax Path",
						"description": "Selecting your BlitzMax path.\n[Select Path](command:blitzmax.pickBlitzMaxPath)",
						"media": {
							"markdown": "walkthroughs/path.md"
						},
						"completionEvents": [
							"onSettingChanged:blitzmax.base.path"
						]
					},
					{
						"id": "maxide",
						"title": "Switch from MaxIDE / BLide",
						"description": "Making the switch",
						"media": {
							"markdown": "walkthroughs/maxide.md"
						}
					},
					{
						"id": "build options",
						"title": "Changing Build Options",
						"description": "Changing your BlitzMax build options.\n[View Build Options](command:blitzmax-build-options.focus)",
						"media": {
							"markdown": "walkthroughs/build_options.md"
						},
						"completionEvents": [
							"onView:blitzmax-build-options"
						]
					},
					{
						"id": "building",
						"title": "Building & Tasks",
						"description": "Building your application.",
						"media": {
							"markdown": "walkthroughs/build_tasks.md"
						}
					},
					{
						"id": "debug and run",
						"title": "Debug & Run Without Debug",
						"description": "Debugging and running your application.",
						"media": {
							"markdown": "walkthroughs/debug_run.md"
						}
					},
					{
						"id": "docs",
						"title": "Documentation",
						"description": "Accessing the BlitzMax documentation.",
						"media": {
							"markdown": "walkthroughs/docs.md"
						}
					},
					{
						"id": "projects",
						"title": "Folders & Workspaces",
						"description": "How to manage your project.",
						"media": {
							"markdown": "walkthroughs/projects.md"
						}
					},
					{
						"id": "optional",
						"title": "Optional Features",
						"description": "Installing optional features.",
						"media": {
							"markdown": "walkthroughs/optional.md"
						}
					},
					{
						"id": "tips",
						"title": "Tips & Tricks",
						"description": "Work efficiently.",
						"media": {
							"markdown": "walkthroughs/tips.md"
						}
					},
					{
						"id": "faq",
						"title": "FAQ & Troubleshooting",
						"description": "",
						"media": {
							"markdown": "walkthroughs/faq.md"
						}
					}
				]
			}
		],
		"breakpoints": [
			{
				"language": "blitzmax"
			}
		],
		"snippets": [
			{
				"language": "blitzmax",
				"path": "./snippets/blitzmax.json"
			}
		],
		"keybindings": [
			{
				"command": "blitzmax.quickHelp",
				"key": "f1",
				"mac": "f1",
				"when": "editorTextFocus && editorLangId == blitzmax"
			}
		],
		"configuration": {
			"type": "object",
			"title": "BlitzMax",
			"properties": {
				"blitzmax.base.path": {
					"type": "string",
					"description": "Absolute path to BlitzMax root.",
					"scope": "machine-overridable"
				},
				"blitzmax.pref.showProblemsOnBuildError": {
					"type": "boolean",
					"default": true,
					"description": "Display the problems view on build task errors."
				},
				"blitzmax.pref.jumpToProblemOnBuildError": {
					"type": "boolean",
					"default": true,
					"description": "Jump to the first problem on build task errors."
				},
				"blitzmax.pref.showBuildProgress": {
					"type": "boolean",
					"default": true,
					"description": "Show build progress notification for build tasks."
				},
				"blitzmax.pref.showBuildColors": {
					"type": "boolean",
					"default": true,
					"description": "Color output from build tasks."
				},
				"blitzmax.lsp.path": {
					"type": "string",
					"markdownDescription": "Relative or absolute path to [LSP](https://github.com/search?q=topic%3ABlitzMax+topic%3Alsp).",
					"default": "./bin/lsp",
					"scope": "machine-overridable"
				},
				"blitzmax.lsp.args": {
					"type": "array",
					"markdownDescription": "[LSP](https://github.com/search?q=topic%3ABlitzMax+topic%3Alsp) specfic arguments."
				},
				"blitzmax.lsp.hotReload": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Restart [LSP](https://github.com/search?q=topic%3ABlitzMax+topic%3Alsp) if changes to the [LSP](https://github.com/search?q=topic%3ABlitzMax+topic%3Alsp) binary are detected."
				},
				"blitzmax.help.customStyle": {
					"type": "boolean",
					"default": true,
					"description": "Use custom CSS style for help documentation."
				},
				"blitzmax.formatter.path": {
					"type": "string",
					"markdownDescription": "Relative or absolute path to external [code formatter](https://github.com/search?q=topic%3ABlitzMax+topic%3Aformatter).",
					"default": "./bin/formatter",
					"scope": "machine-overridable"
				},
				"blitzmax.formatter.args": {
					"type": "array",
					"markdownDescription": "[Code formatter](https://github.com/search?q=topic%3ABlitzMax+topic%3Aformatter) specfic arguments.",
					"default": [
						"-stdin",
						"-stdout"
					]
				},
				"blitzmax.formatter.onType": {
					"type": "array",
					"markdownDescription": "[Code formatter](https://github.com/search?q=topic%3ABlitzMax+topic%3Aformatter) arguments when using VS Code option `Format On Type`.",
					"default": [
						"-quick"
					]
				},
				"blitzmax.formatter.useRange": {
					"type": "boolean",
					"markdownDescription": "Use range arguments instead of sending text selection when [formatting code](https://github.com/search?q=topic%3ABlitzMax+topic%3Aformatter).",
					"default": true
				},
				"blitzmax.formatter.range.start": {
					"type": "string",
					"markdownDescription": "[Code formatter](https://github.com/search?q=topic%3ABlitzMax+topic%3Aformatter) arguments for start of format range.",
					"default": "-start"
				},
				"blitzmax.formatter.range.end": {
					"type": "string",
					"markdownDescription": "[Code formatter](https://github.com/search?q=topic%3ABlitzMax+topic%3Aformatter) arguments for end of format range.",
					"default": "-end"
				},
				"blitzmax.syntax.colorFunctions": {
					"type": "array",
					"description": "An array of all the functions that sets a color",
					"default": ["setcolor", "setclscolor", "requestcolor", "setmaskcolor"]
				}
			}
		},
		"commands": [
			{
				"command": "blitzmax.settings",
				"title": "Open the BlitzMax extension settings",
				"category": "BlitzMax"
			},
			{
				"command": "blitzmax.homepage",
				"title": "Visit the BlitzMax NG homepage",
				"category": "BlitzMax"
			},
			{
				"command": "blitzmax.rebuildDoc",
				"title": "Rebuild Documentation",
				"category": "BlitzMax"
			},
			{
				"command": "blitzmax.buildModules",
				"title": "Build Modules",
				"category": "BlitzMax"
			},
			{
				"command": "blitzmax.rebuildAllModules",
				"title": "Rebuild All Modules",
				"category": "BlitzMax"
			},
			{
				"command": "blitzmax.version",
				"title": "Display BlitzMax Version",
				"category": "BlitzMax"
			},
			{
				"command": "blitzmax.quickHelp",
				"title": "Quick Help",
				"category": "BlitzMax"
			},
			{
				"command": "blitzmax.resetBuildOptions",
				"title": "Reset BlitzMax build options to default settings",
				"category": "BlitzMax"
			},
			{
				"command": "blitzmax.changeDefaultBuildTask",
				"title": "Select Default Build Task",
				"category": "BlitzMax",
				"icon": "$(gear)"
			},
			{
				"command": "blitzmax.toggleBuildOption",
				"title": "Toggle BlitzMax build option",
				"category": "BlitzMax",
				"icon": "$(add)"
			},
			{
				"command": "blitzmax.pickBlitzMaxPath",
				"title": "Pick your BlitzMax path",
				"category": "BlitzMax"
			},
			{
				"command": "blitzmax.pickBlitzMaxFormatterPath",
				"title": "Pick your BlitzMax formatter path",
				"category": "BlitzMax"
			},
			{
				"command": "blitzmax.setSourceFile",
				"title": "Set As Default Build Task Source File",
				"category": "BlitzMax"
			},
			{
				"command": "blitzmax.build",
				"title": "Build Application",
				"category": "BlitzMax",
				"icon": {
					"light": "media/build_light.svg",
					"dark": "media/build_dark.svg"
				}
			},
			{
				"command": "blitzmax.buildAndRun",
				"title": "Build & Run Application",
				"category": "BlitzMax",
				"icon": {
					"light": "media/build_run_light.svg",
					"dark": "media/build_run_dark.svg"
				}
			},
			{
				"command": "blitzmax.buildAndDebug",
				"title": "Build & Debug Application",
				"category": "BlitzMax",
				"icon": {
					"light": "media/build_debug_light.svg",
					"dark": "media/build_debug_dark.svg"
				}
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "blitzmax",
					"title": "BlitzMax",
					"icon": "media/view.svg"
				}
			]
		},
		"views": {
			"blitzmax": [
				{
					"id": "blitzmax-build-options",
					"name": "Build Options",
					"icon": "$(gear)"
				},
				{
					"id": "blitzmax-documentation",
					"name": "Documentation",
					"icon": "$(book)"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "blitzmax-build-options",
				"contents": "Open a BlitzMax file or folder to edit your BlitzMax build options here.\n[Open File](command:workbench.action.files.openFile)\n[Open Folder](command:vscode.openFolder)\nTo learn more about BlitzMax NG [visit our homepage](https://blitzmax.org/).",
				"when": "editorLangId != blitzmax"
			},
			{
				"view": "blitzmax-documentation",
				"contents": "Set your BlitMax path and make sure module documentation are built.",
				"when": "blitzmax:ready != true"
			},
			{
				"view": "debug",
				"contents": "[Run Without Debugging](command:workbench.action.debug.run)"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "blitzmax.changeDefaultBuildTask",
					"when": "view == blitzmax-build-options"
				},
				{
					"command": "blitzmax.resetBuildOptions",
					"when": "view == blitzmax-build-options"
				}
			],
			"view/item/context": [
				{
					"command": "blitzmax.toggleBuildOption",
					"when": "view == blitzmax-build-options && viewItem == option",
					"group": "inline"
				},
				{
					"command": "blitzmax.changeDefaultBuildTask",
					"when": "view == blitzmax-build-options && viewItem == workspaceRoot",
					"group": "inline"
				}
			],
			"editor/context": [
				{
					"when": "editorLangId == blitzmax",
					"command": "blitzmax.quickHelp",
					"group": "navigation@0"
				}
			],
			"editor/title": [
				{
					"when": "editorLangId == blitzmax",
					"command": "blitzmax.build",
					"group": "navigation@-2"
				},
				{
					"when": "editorLangId == blitzmax && blitzmax:debugging",
					"command": "blitzmax.buildAndDebug",
					"group": "navigation@-1"
				},
				{
					"when": "editorLangId == blitzmax && !blitzmax:debugging",
					"command": "blitzmax.buildAndRun",
					"group": "navigation@0"
				}
			],
			"explorer/context": [
				{
					"when": "resourceLangId == blitzmax",
					"command": "blitzmax.setSourceFile",
					"group": "1_modification"
				}
			],
			"editor/title/context": [
				{
					"when": "resourceLangId == blitzmax",
					"command": "blitzmax.setSourceFile",
					"group": "0"
				}
			]
		},
		"languages": [
			{
				"id": "blitzmax",
				"extensions": [
					".bmx"
				],
				"aliases": [
					"BlitzMax NG",
					"BlitzMax",
					"bmx"
				],
				"configuration": "./language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "blitzmax",
				"scopeName": "source.bmx",
				"path": "./syntaxes/blitzmax.json"
			}
		],
		"problemMatchers": [
			{
				"name": "blitzmax",
				"owner": "blitzmax",
				"source": "BlitzMax",
				"fileLocation": "absolute",
				"label": "The standard BlitzMax problem matcher",
				"background": {
					"beginsPattern": ".",
					"endsPattern": "."
				},
				"pattern": [
					{
						"regexp": "^Compile (Error|Warning)?: (.*)",
						"message": 2,
						"severity": 1
					},
					{
						"regexp": "^\\[(.*.bmx);(\\d+);(\\d+)]",
						"file": 1,
						"line": 2,
						"endColumn": 3
					}
				]
			}
		],
		"debuggers": [
			{
				"type": "bmx",
				"label": "BlitzMax Debug",
				"program": "./out/bmxruntime.js",
				"languages": [
					"blitzmax"
				],
				"configurationAttributes": {
					"launch": {
						"required": [
							"source",
							"make"
						],
						"properties": {
							"bmk": {
								"type": "string",
								"markdownDescription": "Used defined bmk path `i.e. C:/BlitzMaxNG/bin/bmk`"
							},
							"legacy": {
								"type": "boolean",
								"description": "Enable BlitzMax Legacy support",
								"default": false
							},
							"make": {
								"type": "string",
								"markdownDescription": "[Type of project](https://blitzmax.org/docs/en/tools/bmk/#makeapp)",
								"default": "application",
								"enum": [
									"application",
									"module",
									"library",
									"bootstrap"
								],
								"markdownEnumDescriptions": [
									"[Builds an application from a single root source file](https://blitzmax.org/docs/en/tools/bmk/#makeapp)",
									"[Builds a set of modules](https://blitzmax.org/docs/en/tools/bmk/#makemods)",
									"[On Win32, builds a dynamic linked library (DLL) from the source file](https://blitzmax.org/docs/en/tools/bmk/#makelib)",
									"[Build a bootstrap package](https://blitzmax.org/docs/en/tools/bmk/#makebootstrap)"
								]
							},
							"onlycompile": {
								"type": "boolean",
								"default": false,
								"markdownDescription": "[Compile sources only, no building of the application](https://blitzmax.org/docs/en/tools/bmk/#compile)"
							},
							"source": {
								"type": "string",
								"default": "${file}",
								"markdownDescription": "Absolute path to root source file"
							},
							"fullcompile": {
								"type": "boolean",
								"default": false,
								"markdownDescription": "[Recompiles all source/modules regardless of timestamp](https://blitzmax.org/docs/en/tools/bmk/#-a)"
							},
							"appstub": {
								"type": "string",
								"markdownDescription": "[Builds an app using a custom appstub](https://blitzmax.org/docs/en/tools/bmk/#-b-custom-appstub-module)"
							},
							"architecture": {
								"type": "string",
								"enum": [
									"armeabiv7a",
									"arm64v8a",
									"armeabi",
									"arm64",
									"arm",
									"x86",
									"x64"
								],
								"markdownDescription": "[Compiles to the specified architecture](https://blitzmax.org/docs/en/tools/bmk/#-g-architecture)"
							},
							"hidpi": {
								"type": "boolean",
								"default": false,
								"markdownDescription": "Specifies that the application supports high-resolution screens"
							},
							"gdb": {
								"type": "boolean",
								"default": false,
								"markdownDescription": "[Generates line mappings suitable for GDB debugging](https://blitzmax.org/docs/en/tools/bmk/#-gdb)"
							},
							"gprof": {
								"type": "boolean",
								"default": false,
								"markdownDescription": "Gprof is a performance analysis tool for Unix applications"
							},
							"threaded": {
								"type": "boolean",
								"markdownDescription": "[Builds multithreaded version](https://blitzmax.org/docs/en/tools/bmk/#-h)"
							},
							"universal": {
								"type": "boolean",
								"default": false,
								"markdownDescription": "[Creates a Universal build for supported platforms](https://blitzmax.org/docs/en/tools/bmk/#-i)"
							},
							"target": {
								"type": "string",
								"enum": [
									"win32",
									"linux",
									"macos",
									"ios",
									"android",
									"raspberrypi",
									"nx"
								],
								"markdownDescription": "[Cross-compiles to the specific target platform](https://blitzmax.org/docs/en/tools/bmk/#-l-target-platform)"
							},
							"musl": {
								"type": "boolean",
								"markdownDescription": "[Enables musl libc compatibility](https://blitzmax.org/docs/en/tools/bmk/#-musl)"
							},
							"nostrictupgrade": {
								"type": "boolean",
								"markdownDescription": "[Don't upgrade strict method void return types, if required](https://blitzmax.org/docs/en/tools/bmk/#-nostrictupgrade)"
							},
							"output": {
								"type": "string",
								"markdownDescription": "[Specifies the output file relative to the workspace foder](https://blitzmax.org/docs/en/tools/bmk/#-o-output-file)"
							},
							"quiet": {
								"type": "boolean",
								"markdownDescription": "[Quiet build](https://blitzmax.org/docs/en/tools/bmk/#-q)"
							},
							"quick": {
								"type": "boolean",
								"markdownDescription": "[Do not scan modules for changes](https://blitzmax.org/docs/en/tools/bmk/#-quick)"
							},
							"standalone": {
								"type": "boolean",
								"markdownDescription": "[Generate but do not compile into binary form](https://blitzmax.org/docs/en/tools/bmk/#-standalone)"
							},
							"static": {
								"type": "boolean",
								"markdownDescription": "[Statically link binary](https://blitzmax.org/docs/en/tools/bmk/#-static)"
							},
							"apptype": {
								"type": "string",
								"markdownDescription": "[Specifies the application type](https://blitzmax.org/docs/en/tools/bmk/#-t-app-type)",
								"enum": [
									"console",
									"gui"
								]
							},
							"verbose": {
								"type": "boolean",
								"markdownDescription": "[Verbose (noisy) build](https://blitzmax.org/docs/en/tools/bmk/#-v)"
							},
							"funcargcasting": {
								"type": "string",
								"enum": [
									"error",
									"warning"
								],
								"markdownEnumDescriptions": [
									"Shows error",
									"Shows warning"
								],
								"markdownDescription": "[How to handle function argument casting issues](https://blitzmax.org/docs/en/tools/bmk/#-w)"
							},
							"framework": {
								"type": "string",
								"markdownDescription": "[Defines to use a specific module as framework](https://blitzmax.org/docs/en/tools/bmk/#-f-framework)"
							},
							"nomanifest": {
								"type": "boolean",
								"markdownDescription": "[Do not generate a manifest file for the built application](https://blitzmax.org/docs/en/tools/bmk/#-nomanifest)"
							},
							"single": {
								"type": "boolean",
								"markdownDescription": "[Disabled multi threaded processing in a bmk built with thread support](https://blitzmax.org/docs/en/tools/bmk/#-single)"
							},
							"nodef": {
								"type": "boolean",
								"markdownDescription": "[Defines to not generate .def files useable by created DLLs/shared libraries](https://blitzmax.org/docs/en/tools/bmk/#-nodef)"
							},
							"nohead": {
								"type": "boolean",
								"markdownDescription": "[Defines to not generate header files useable by created DLLs/shared libraries](https://blitzmax.org/docs/en/tools/bmk/#-nohead)"
							},
							"override": {
								"type": "boolean",
								"markdownDescription": "[Sets requirement for overriding methods and functions to append override to their definitions](https://blitzmax.org/docs/en/tools/bmk/#-override)"
							},
							"overerr": {
								"type": "boolean",
								"markdownDescription": "[Defines missing override keywords in overridden methods and functions to be handled as error instead of warning](https://blitzmax.org/docs/en/tools/bmk/#-overerr)"
							},
							"nopie": {
								"type": "boolean",
								"markdownDescription": "[Do not generate PIE binaries](https://blitzmax.org/docs/en/tools/bmk/#-no-pie)"
							},
							"upx": {
								"type": "boolean",
								"markdownDescription": "[Compress the created binary with UPX](https://blitzmax.org/docs/en/tools/bmk/#-upx)"
							},
							"conditionals": {
								"type": "array",
								"markdownDescription": "[User defined conditionals, usable via `?myconditional`](https://blitzmax.org/docs/en/tools/bcc/#-ud-user-defined-conditionals)"
							},
							"args": {
								"type": "array",
								"description": "User defined arguments"
							}
						}
					}
				},
				"initialConfigurations": [
					{
						"type": "bmx",
						"name": "Default BlitzMax debug",
						"request": "launch",
						"source": "${file}"
					}
				],
				"configurationSnippets": [
					{
						"label": "BlitzMax Debug",
						"description": "A new configuration for debugging a BlitzMax .bmx file.",
						"body": {
							"type": "bmx",
							"name": "Default BlitzMax debug",
							"request": "launch",
							"source": "${file}"
						}
					}
				]
			}
		],
		"taskDefinitions": [
			{
				"type": "bmx",
				"required": [
					"source",
					"make"
				],
				"properties": {
					"bmk": {
						"type": "string",
						"markdownDescription": "Used defined bmk path `i.e. C:/BlitzMaxNG/bin/bmk`"
					},
					"legacy": {
						"type": "boolean",
						"description": "Enable BlitzMax Legacy support",
						"default": false
					},
					"make": {
						"type": "string",
						"markdownDescription": "[Type of project](https://blitzmax.org/docs/en/tools/bmk/#makeapp)",
						"default": "application",
						"enum": [
							"application",
							"module",
							"library",
							"bootstrap"
						],
						"markdownEnumDescriptions": [
							"[Builds an application from a single root source file](https://blitzmax.org/docs/en/tools/bmk/#makeapp)",
							"[Builds a set of modules](https://blitzmax.org/docs/en/tools/bmk/#makemods)",
							"[On Win32, builds a dynamic linked library (DLL) from the source file](https://blitzmax.org/docs/en/tools/bmk/#makelib)",
							"[Build a bootstrap package](https://blitzmax.org/docs/en/tools/bmk/#makebootstrap)"
						]
					},
					"onlycompile": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "[Compile sources only, no building of the application](https://blitzmax.org/docs/en/tools/bmk/#compile)"
					},
					"source": {
						"type": "string",
						"default": "${file}",
						"markdownDescription": "Absolute path to root source file"
					},
					"fullcompile": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "[Recompiles all source/modules regardless of timestamp](https://blitzmax.org/docs/en/tools/bmk/#-a)"
					},
					"appstub": {
						"type": "string",
						"markdownDescription": "[Builds an app using a custom appstub](https://blitzmax.org/docs/en/tools/bmk/#-b-custom-appstub-module)"
					},
					"debug": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "[Builds a debug version](https://blitzmax.org/docs/en/tools/bmk/#-d)"
					},
					"architecture": {
						"type": "string",
						"enum": [
							"armeabiv7a",
							"arm64v8a",
							"armeabi",
							"arm64",
							"arm",
							"x86",
							"x64"
						],
						"markdownDescription": "[Compiles to the specified architecture](https://blitzmax.org/docs/en/tools/bmk/#-g-architecture)"
					},
					"hidpi": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "Specifies that the application supports high-resolution screens"
					},
					"gdb": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "[Generates line mappings suitable for GDB debugging](https://blitzmax.org/docs/en/tools/bmk/#-gdb)"
					},
					"gprof": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "Gprof is a performance analysis tool for Unix applications"
					},
					"threaded": {
						"type": "boolean",
						"markdownDescription": "[Builds multithreaded version](https://blitzmax.org/docs/en/tools/bmk/#-h)"
					},
					"universal": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "[Creates a Universal build for supported platforms](https://blitzmax.org/docs/en/tools/bmk/#-i)"
					},
					"target": {
						"type": "string",
						"enum": [
							"win32",
							"linux",
							"macos",
							"ios",
							"android",
							"raspberrypi",
							"nx"
						],
						"markdownDescription": "[Cross-compiles to the specific target platform](https://blitzmax.org/docs/en/tools/bmk/#-l-target-platform)"
					},
					"musl": {
						"type": "boolean",
						"markdownDescription": "[Enables musl libc compatibility](https://blitzmax.org/docs/en/tools/bmk/#-musl)"
					},
					"nostrictupgrade": {
						"type": "boolean",
						"markdownDescription": "[Don't upgrade strict method void return types, if required](https://blitzmax.org/docs/en/tools/bmk/#-nostrictupgrade)"
					},
					"output": {
						"type": "string",
						"markdownDescription": "[Specifies the output file relative to the workspace foder](https://blitzmax.org/docs/en/tools/bmk/#-o-output-file)"
					},
					"quiet": {
						"type": "boolean",
						"markdownDescription": "[Quiet build](https://blitzmax.org/docs/en/tools/bmk/#-q)"
					},
					"quick": {
						"type": "boolean",
						"markdownDescription": "[Do not scan modules for changes](https://blitzmax.org/docs/en/tools/bmk/#-quick)"
					},
					"standalone": {
						"type": "boolean",
						"markdownDescription": "[Generate but do not compile into binary form](https://blitzmax.org/docs/en/tools/bmk/#-standalone)"
					},
					"static": {
						"type": "boolean",
						"markdownDescription": "[Statically link binary](https://blitzmax.org/docs/en/tools/bmk/#-static)"
					},
					"apptype": {
						"type": "string",
						"markdownDescription": "[Specifies the application type](https://blitzmax.org/docs/en/tools/bmk/#-t-app-type)",
						"enum": [
							"console",
							"gui"
						]
					},
					"verbose": {
						"type": "boolean",
						"markdownDescription": "[Verbose (noisy) build](https://blitzmax.org/docs/en/tools/bmk/#-v)"
					},
					"funcargcasting": {
						"type": "string",
						"enum": [
							"error",
							"warning"
						],
						"markdownEnumDescriptions": [
							"Shows error",
							"Shows warning"
						],
						"markdownDescription": "[How to handle function argument casting issues](https://blitzmax.org/docs/en/tools/bmk/#-w)"
					},
					"framework": {
						"type": "string",
						"markdownDescription": "[Defines to use a specific module as framework](https://blitzmax.org/docs/en/tools/bmk/#-f-framework)"
					},
					"nomanifest": {
						"type": "boolean",
						"markdownDescription": "[Do not generate a manifest file for the built application](https://blitzmax.org/docs/en/tools/bmk/#-nomanifest)"
					},
					"single": {
						"type": "boolean",
						"markdownDescription": "[Disabled multi threaded processing in a bmk built with thread support](https://blitzmax.org/docs/en/tools/bmk/#-single)"
					},
					"nodef": {
						"type": "boolean",
						"markdownDescription": "[Defines to not generate .def files useable by created DLLs/shared libraries](https://blitzmax.org/docs/en/tools/bmk/#-nodef)"
					},
					"nohead": {
						"type": "boolean",
						"markdownDescription": "[Defines to not generate header files useable by created DLLs/shared libraries](https://blitzmax.org/docs/en/tools/bmk/#-nohead)"
					},
					"override": {
						"type": "boolean",
						"markdownDescription": "[Sets requirement for overriding methods and functions to append override to their definitions](https://blitzmax.org/docs/en/tools/bmk/#-override)"
					},
					"overerr": {
						"type": "boolean",
						"markdownDescription": "[Defines missing override keywords in overridden methods and functions to be handled as error instead of warning](https://blitzmax.org/docs/en/tools/bmk/#-overerr)"
					},
					"nopie": {
						"type": "boolean",
						"markdownDescription": "[Do not generate PIE binaries](https://blitzmax.org/docs/en/tools/bmk/#-no-pie)"
					},
					"upx": {
						"type": "boolean",
						"markdownDescription": "[Compress the created binary with UPX](https://blitzmax.org/docs/en/tools/bmk/#-upx)"
					},
					"conditionals": {
						"type": "array",
						"markdownDescription": "[User defined conditionals, usable via `?myconditional`](https://blitzmax.org/docs/en/tools/bcc/#-ud-user-defined-conditionals)"
					},
					"args": {
						"type": "array",
						"description": "User defined arguments"
					}
				}
			}
		]
	}
}